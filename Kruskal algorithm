#include <stdio.h>
#include <stdlib.h>
#include <limits.h>

#define INF 9999
int find(int parent[], int i) {
	if (parent[i] != i)
		parent[i] = find(parent, parent[i]);
	return parent[i];
}
void union1(int parent[], int rank[], int i, int j) {
	int iroot = find(parent, i);
	int jroot = find(parent, j);

	if (rank[iroot] < rank[jroot])
		parent[iroot] = jroot;
	else if (rank[iroot] > rank[jroot])
		parent[jroot] = iroot;
	else {
		parent[jroot] = iroot;
		rank[iroot]++;
	}
}
struct Edge {
	int src, dest, weight;
};
int compareEdges(const void *a, const void *b) {
	struct Edge *e1 = (struct Edge *)a;
	struct Edge *e2 = (struct Edge *)b;
	if (e1->weight != e2->weight)
		return e1->weight - e2->weight;
	if (e1->src != e2->src)
		return e1->src - e2->src;
	return e1->dest - e2->dest;
}
void kruskalMST(int **cost, int V) {
}
